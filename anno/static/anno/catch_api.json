{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "CATCH Annotation API"
    },
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/anno": {
            "get": {
                "description": "Gets the `Annotation` object for the given id; the requesting user must have permission to read the Annotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "post": {
                "description": "Creates an `Annotation` object; omit the `id` property of the annotation input parameter object, and a new one will be created and returned in the response. If an `id` is included in the annotation input parameter, it will try to be honored but the create action will fail if already present in storage.",
                "parameters": [
                    {
                        "name": "anno",
                        "in": "body",
                        "description": "annotation object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "description": "Replaces an `Annotation` object",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "description": "Deletes an `Annotation` object; the requesting user must have permission to delete the Annotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/anno/update_tags": {
            "put": {
                "description": "Replaces the list of tags in the given `Annotation` object;; the requesting user must permission to update the Annnotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "body",
                        "description": "list of tags",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/anno/update_text": {
            "put": {
                "description": "Replaces the textual body of given `Annotation` object; the requesting user must have permission to update the Annotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "in": "body",
                        "description": "annotation text",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BodyItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/anno/update_target": {
            "put": {
                "description": "Replaces the list of targets of given `Annotation` object; the requesting user must have permission to update the Annotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "annotation id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "target",
                        "in": "body",
                        "description": "annotation target object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Target"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/anno/search": {
            "get": {
                "description": "Returns list of `Annotation` objects resulting from the given search",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "max number of annotations in response; `-1` means all results, default is `10`",
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "where the slice of returned `Annotation` objects should start; default is `0`",
                        "type": "string"
                    },
                    {
                        "name": "userids",
                        "in": "query",
                        "description": "comma separated list of userids",
                        "type": "string"
                    },
                    {
                        "name": "usernames",
                        "in": "query",
                        "description": "comma separated list of usernames",
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "comma separated list of target source uris",
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "fulltext search in body of annotation",
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "comma separated list of tags; this is an exact search",
                        "type": "string"
                    },
                    {
                        "name": "parentid",
                        "in": "query",
                        "description": "return comments on the annotation with `parentid`",
                        "type": "string"
                    },
                    {
                        "name": "sourceid",
                        "in": "query",
                        "description": "commas separated list of sourceids(internal reference for a target)",
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "query",
                        "description": "lti platform name",
                        "type": "string"
                    },
                    {
                        "name": "contextid",
                        "in": "query",
                        "description": "contextid with the given platform; ignored if platform not present",
                        "type": "string"
                    },
                    {
                        "name": "collectionid",
                        "in": "query",
                        "description": "collectionid with the given contextid; ignored if platform and contextid not present",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Annotation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "jwt": {
            "description": "jwt token with consumer signature",
            "type": "apiKey",
            "name": "x-annotation-auth-token",
            "in": "header"
        }
    },
    "definitions": {
        "Annotation": {
            "type": "object",
            "required": ["id", "body", "target",
        "platform", "permissions", "creator", "schema_version"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "schema_version": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "dateTime"
                },
                "modified": {
                    "type": "string",
                    "format": "dateTime"
                },
                "creator": {
                    "$ref": "#/definitions/Creator"
                },
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                },
                "platform": {
                    "$ref": "#/definitions/Platform"
                },
                "body": {
                    "$ref": "#/definitions/Body"
                },
                "target": {
                    "$ref": "#/definitions/Target"
                }
            }
        },
        "Body": {
            "type": "object",
            "required": ["type", "items"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Choice",
                        "List"
                    ]
                },
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/BodyItem"
                    }
                }
            }
        },
        "BodyItem": {
            "type": "object",
            "required": ["type", "purpose", "value"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "TextualBody"
                    ]
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "text/html",
                        "text/plain",
                        "text/richtext",
                        "application/rtf",
                        "application/x-rtf"
                    ]
                },
                "purpose": {
                    "type": "string",
                    "enum": [
                        "commenting",
                        "tagging",
                        "replying"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Target": {
            "type": "object",
            "required": ["type", "items"],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Choice",
                        "List"
                    ]
                },
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/TargetItem"
                    }
                }
            }
        },
        "TargetItem": {
            "type": "object",
            "required": ["source", "type"],
            "properties": {
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Text",
                        "Image",
                        "Video",
                        "Audio",
                        "Thumbnail",
                        "Annotation",
                        "Choice"
                    ]
                },
                "format": {
                    "type": "string"
                },
                "selector": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "Choice",
                                "List"
                            ]
                        },
                        "items": {
                            "type": "array",
                            "minItems": 0,
                            "items": {
                                "$ref": "#/definitions/SelectorItem"
                            }
                        }
                    }
                },
                "scope": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "enum": [
                                "Viewport"
                            ]
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SelectorItem": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "RangeSelector",
                        "XPathSelector",
                        "TextPositionSelector",
                        "TextQuoteSelector",
                        "CssSelector",
                        "FragmentSelector",
                        "SvgSelector"
                    ]
                },
                "conformsTo": {
                    "type": "string"
                },
                "refinedBy": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/SelectorItem"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Creator": {
            "type": "object",
            "required": ["id", "name"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Permissions": {
            "type": "object",
            "required": ["can_read", "can_update", "can_delete", "can_admin"],
            "properties": {
                "can_read": {
                    "$ref": "#/definitions/Permission"
                },
                "can_update": {
                    "$ref": "#/definitions/Permission"
                },
                "can_delete": {
                    "$ref": "#/definitions/Permission"
                },
                "can_admin": {
                    "$ref": "#/definitions/Permission"
                }
            }
        },
        "Permission": {
            "type": "array",
            "minItems": 0,
            "items": {
                "type": "string"
            },
            "uniqueItems": true
        },
        "Platform": {
            "type": "object",
            "required": ["platform_name", "contextId"],
            "properties": {
                "platform_name": {
                    "type": "string"
                },
                "contextId": {
                    "type": "string"
                },
                "collectionId": {
                    "type": "string"
                },
                "target_source_id": {
                    "type": "string"
                }
            }
        },
        "Tags": {
            "type": "array",
            "minItems": 0,
            "items": {
                "type": "string"
            }
        },
        "SearchResult": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "total of objects found for search"
                },
                "size": {
                    "type": "integer",
                    "description": "number of objects returned in this list"
                },
                "limit": {
                    "type": "integer",
                    "description": "max number of objects requested"
                },
                "offset": {
                    "type": "integer",
                    "description": "requested offset"
                },
                "rows": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}